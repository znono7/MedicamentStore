<Window x:Class="MedicamentStore.InvoiceItemsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MedicamentStore"
        
        mc:Ignorable="d"
         WindowStyle="None" WindowState="Maximized" WindowStartupLocation="CenterScreen"
        AllowsTransparency="True" Background="Transparent" x:Name="AppWindow" MinHeight="200" MinWidth="400"
        Title="InvoiceItemsWindow" Height="450" Width="1200">
    <Grid Margin="255 50 10 55" Background="{StaticResource PrimaryBackgroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="64"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.RowSpan="4" 
               Panel.ZIndex="10"
               Opacity="0.3" Grid.Column="1">
            <Border Background="{StaticResource PrimaryBlackColor}" CornerRadius="8"
                    local:AnimateFadeInProperty.Value="{Binding MenuVisible}"/>
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding PopupClickawayCommand}" />
            </Border.InputBindings>
        </Border>
        <local:TypeProduitControl DataContext="{Binding TypeProduitCtrl}" 
                           local:AnimateSlideInFromLeftProperty.Value="{Binding DataContext.MenuVisible, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                           Grid.RowSpan="4"/>
        <Button Panel.ZIndex="11" Grid.Column="1" ToolTip="Type de Produits Pharmaceutique" Click="expandButton_Click" Name="expandButton" Cursor="Hand"  Width="24" Height="24" HorizontalAlignment="Left" Command="{Binding MenuVisibleCommand}" Margin="20 20" VerticalAlignment="Top" Style="{StaticResource PathGrowButton}" >
            <Path x:Name="arrowIcon" Fill="#ffffff"  Data="{StaticResource Next}" Stretch="Uniform" Height="11" Width="11">
                <Path.RenderTransform>
                    <RotateTransform x:Name="rotateTransform" Angle="0" CenterX="3.5" CenterY="5.5"/>
                </Path.RenderTransform>
            </Path>

        </Button>
        <Button Grid.Column="1" Click="Button_Click" HorizontalAlignment="Right" Margin="20 10" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}"  Tag="IsCloseButton"/>
        <Grid Grid.Column="1" Grid.Row="1">
            <Border Margin="20 3" CornerRadius="7" Background="{StaticResource TertiaryBackgroundColor}">
                <Border.Effect>
                    <DropShadowEffect Direction="-130" BlurRadius="30" ShadowDepth="5" Opacity="0.1"/>
                </Border.Effect>
            </Border>
            <StackPanel Margin="30 10 10 10" Orientation="Horizontal" HorizontalAlignment="Left" >
                <TextBox Margin="5 5" Text="{Binding SearchText}" Width="350"
                        Tag="Nom Commercial uniquement ..." Style="{StaticResource SearchTextBox2}"/>


                <Button  IsDefault="True" Margin="0 0 40 0" Height="32" Width="32" Cursor="Hand" Background="#5D7881"
                 Style="{StaticResource gridEditButton}" Command="{Binding SearchCommand}">
                    <TextBlock FontFamily="{StaticResource FontAwesome2}" Text="&#xf002;" HorizontalAlignment="Right" VerticalAlignment="Center"
                                FontSize="16" Foreground="{StaticResource TertiaryBackgroundColor}" Margin="0"/>
                </Button>


            </StackPanel>
           

        </Grid>
        <Path Grid.Column="1" Panel.ZIndex="1" Grid.Row="2" Visibility="{Binding IsLoading,Converter={local:BooleanToVisiblityConverter}, ConverterParameter=True}" 
      Data="{StaticResource spinner}" Width="64" Height="64" Style="{StaticResource SpinningPath}" Fill="{StaticResource PrimeBlueBrush}" />

        <ScrollViewer Grid.Column="1" Margin="20 10" Grid.Row="2"  VerticalScrollBarVisibility="Auto">
            <DataGrid  RowStyle="{DynamicResource DataGridRowStyle1}"
                                ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                                CellStyle="{DynamicResource DataGridCellStyle1}"
                                x:Name="ProductEntrerDataGrid" 
                                Style="{DynamicResource DataGridStyle1}"
                                Margin="0 10"  
                                ItemsSource="{Binding FilteredStocks}" 
                                AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="100" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid x:Name="GridImage">
                                    <Border  CornerRadius="7"  Background="{StaticResource TertiaryBackgroundColor}">
                                        <Border.Effect>
                                            <DropShadowEffect Direction="-130" BlurRadius="30" ShadowDepth="5" Opacity="0.1"/>
                                        </Border.Effect>
                                    </Border>

                                    <Image Source="{Binding Img, Converter={local:FallbackImageConverter}}"  Style="{StaticResource medImg}" />
                                    <Popup Width="200" Height="140" x:Name="PopupImage" >

                                        <Border    Background="{StaticResource TertiaryBackgroundColor}">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="-130" BlurRadius="30" ShadowDepth="5" Opacity="0.1"/>
                                            </Border.Effect>
                                            <Image Width="160" Height="120"  Style="{StaticResource medImg}" Source="{Binding Img,Converter={local:FallbackImageConverter}}"/>

                                        </Border>


                                    </Popup>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="PopupImage" Property="IsOpen" Value="True"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Header="Produits Pharmaceutique" Width="320"   IsReadOnly="True"  CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" Height="Auto" x:Name="tbPercent" Text="{Binding Nom_Commercial}" FontSize="13"
                                                         Foreground="{StaticResource TertiaryTextColor}"
                                                         FontFamily="{StaticResource OakSans-Regular}"
                                                         ToolTip="{Binding Nom_Commercial}"/>
                                        <TextBlock Text=" "/>
                                        <TextBlock TextWrapping="Wrap" Height="Auto" x:Name="tbPercent3" VerticalAlignment="Bottom" Text="{Binding Forme}" FontSize="11"
                                                             Foreground="{StaticResource TertiaryTextColor}"
                                                             FontFamily="{StaticResource OakSans-Regular}"
                                                                  ToolTip="{Binding Forme}"/>

                                    </StackPanel>
                                    <TextBlock TextWrapping="Wrap" Height="Auto" x:Name="tbPercent2" VerticalAlignment="Bottom" Text="{Binding Dosage}" FontSize="11"
                                                        Foreground="{StaticResource TertiaryTextColor}"
                                                        FontFamily="{StaticResource OakSans-Regular}"
                                                             ToolTip="{Binding Dosage}"/>
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="Foreground" TargetName="tbPercent" Value="#ffffff" />
                                        <Setter Property="Foreground" TargetName="tbPercent2" Value="#ffffff" />
                                        <Setter Property="Foreground" TargetName="tbPercent3" Value="#ffffff" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="Foreground" TargetName="tbPercent" Value="#ffffff" />
                                        <Setter Property="Foreground" TargetName="tbPercent2" Value="#ffffff" />
                                        <Setter Property="Foreground" TargetName="tbPercent3" Value="#ffffff" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn CanUserResize="False" Header="Type" Width="Auto" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock x:Name="TypeTxt" TextWrapping="Wrap" Height="Auto" TextAlignment="Center"  Foreground="#113110" ToolTip="{Binding TypeMed}" Text="{Binding TypeMed,UpdateSourceTrigger=PropertyChanged,Converter={local:CurrencyConverter}}" Style="{StaticResource TextH4}" Margin="0"/>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="Foreground" TargetName="TypeTxt" Value="#ffffff" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="Foreground" TargetName="TypeTxt" Value="#ffffff" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Quantite" Width="Auto" IsReadOnly="True" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border Padding="6 2" Height="28" Width="Auto" CornerRadius="8" HorizontalAlignment="Left" Background="#14174C">
                                        <StackPanel Orientation="Horizontal">

                                            <TextBlock x:Name="tbPercent5" VerticalAlignment="Center" Text="{Binding Quantite}" FontSize="13"
                                                                   Foreground="#ffffff" HorizontalAlignment="Center"
                                                                   FontFamily="{StaticResource OakSans-Regular}" />
                                        </StackPanel>

                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="État" Width="Auto" IsReadOnly="True" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid >
                                    <Border Padding="6 2" Height="28" Width="Auto" CornerRadius="16" HorizontalAlignment="Left" Background="{Binding PrimaryBackground,Converter={local:StringRGBToBrushConverter}}">
                                        <TextBlock x:Name="tbPercent5" VerticalAlignment="Center" Text="{Binding Status}" FontSize="11"
                                              Foreground="#ffffff" HorizontalAlignment="Center"
                                              FontFamily="{StaticResource OakSans-Regular}"
                                               ToolTip="{Binding Status}"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn CanUserResize="False" Header="Prix" Width="Auto" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock x:Name="prixTxt" TextWrapping="Wrap" Height="Auto" TextAlignment="Center"  Foreground="#113110" ToolTip="{Binding Prix}" Text="{Binding Prix,UpdateSourceTrigger=PropertyChanged,Converter={local:CurrencyConverter}}" Style="{StaticResource TextH4}" Margin="0"/>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="Foreground" TargetName="prixTxt" Value="#ffffff" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="Foreground" TargetName="prixTxt" Value="#ffffff" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  
                    <DataGridTemplateColumn  IsReadOnly="True" Width="Auto" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button Margin="0" Background="Transparent" Cursor="Hand" 
                                            Command="{Binding DataContext.SetItemCommand ,  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" 
                                                  CommandParameter="{Binding }" 
                                                  Style="{StaticResource PathGrowButton}">
                                        <Path x:Name="PPlus" Data="{StaticResource addCart}" Fill="#5D7881" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Width="24" Height="24"/>
                                    </Button>
                                   
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="Fill" TargetName="PPlus" Value="#ffffff" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                        <Setter Property="Fill" TargetName="PPlus" Value="#ffffff" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>
        <Grid Grid.Column="1" Grid.Row="3" >
            <local:PaginationControl DataContext="{Binding paginationView}" 
                                     />
        </Grid>
    </Grid>
   
</Window>
