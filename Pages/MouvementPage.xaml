<local:BasePage  
                x:Class="MedicamentStore.MouvementPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MedicamentStore"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="1200"
      Title="MouvementPage" >

    <Grid Background="{StaticResource PrimaryBackgroundColor}">
        <Grid Margin="10">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>

            </Grid.RowDefinitions>
            <!-- Dimmed overlay -->
            <Border Grid.RowSpan="3"
                     Panel.ZIndex="10"
                     Opacity="0.3" Grid.ColumnSpan="2">

                <Border Background="{StaticResource PrimaryBlackColor}" CornerRadius="8"
                        local:AnimateFadeInProperty.Value="{Binding isExpanded}"/>
                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding PopupClickawayCommand}" />
                </Border.InputBindings>
            </Border>
            <StackPanel  Height="48" Orientation="Horizontal" HorizontalAlignment="Left">
                <Button Cursor="Hand"  Command="{Binding ReturnCommand}" Style="{StaticResource IconGrowButton}" Content="&#xf060;"/>
                <TextBlock Grid.Column="1" Text="Mouvement du Stock" Margin="20 10"
         FontFamily="{StaticResource Baloo-Regular}" Foreground="{StaticResource TertiaryTextColor}" 
         FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>

            </StackPanel>
            <Grid Grid.Row="1" Margin="20,3,20,3" Grid.ColumnSpan="2">
                <Border  CornerRadius="2" Background="{StaticResource TertiaryBackgroundColor}">
                    <Border.Effect>
                        <DropShadowEffect Direction="-130" BlurRadius="30" ShadowDepth="5" Opacity="0.1"/>
                    </Border.Effect>
                </Border>
                <StackPanel Orientation="Horizontal">
                    <ComboBox IsEditable="False"  ItemsSource="{Binding TypeItems}" 
                              DisplayMemberPath="type" SelectedValuePath="Id" SelectedItem="{Binding SelectedType, UpdateSourceTrigger=PropertyChanged}"
                              SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" Style="{DynamicResource ComboBoxStyle3}" HorizontalAlignment="Left" Width="200"/>
                    <!--<ComboBox.Resources>
                            -->
                    <!-- Define your resources here -->
                    <!--
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="SnapsToDevicePixels" Value="true"/>
                                <Setter Property="Margin" Value="15 0 0 0"/>
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="Foreground" Value="#373737"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate  TargetType="{x:Type ComboBoxItem}">
                                            <Border  Name="Border" Padding="10 5" SnapsToDevicePixels="true">
                                                <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsHighlighted" Value="true">
                                                    <Setter TargetName="Border" Property="Background" Value="#304FFE"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.Resources>
                    </ComboBox>-->

                    <Button Command="{Binding ExpandCommand}" Click="expandButton_Click" Name="expandButton" Width="240" Style="{StaticResource addButton}" Background="Transparent">
                        <Grid Width="240">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="dateIcon" Margin="10 0 0 0"  Fill="#343434"  Data="{StaticResource date}" Stretch="Uniform" Height="11" Width="11"/>
                            <TextBlock Grid.Column="1"  x:Name="txtDate" Foreground="#343434" Style="{StaticResource TextH4}" Text="{Binding DateFilterViewModel.DateStat}"/>
                            <Path Grid.Column="2" x:Name="arrowIcon" Margin="0 0 10 0"  Fill="#343434"  Data="{StaticResource angel-up}" Stretch="Uniform" Height="11" Width="11">
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="rotateTransform" Angle="0" CenterX="5.5" CenterY="4.5"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>

                    </Button>
                    <Popup IsOpen="{Binding isExpanded}" AllowsTransparency="True" Name="popup" PlacementTarget="{Binding ElementName=expandButton}" Placement="Bottom" StaysOpen="True">
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.RowSpan="2"  CornerRadius="8" Background="{StaticResource TertiaryBackgroundColor}"
                                        BorderThickness="1" BorderBrush="#7A7CFF">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="16" ShadowDepth="2"
                                                        Color="LightSlateGray" Opacity="0.2" />
                                </Border.Effect>
                            </Border>
                            <local:DateFilterControl DataContext="{Binding DateFilterViewModel}"/>
                            <Button Command="{Binding FilterDataCommand}" Grid.Row="1" Style="{StaticResource addButton}" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                <StackPanel Orientation="Horizontal">
                                    <Path  Data="{StaticResource done}" Fill="{StaticResource TertiaryBackgroundColor}" Stretch="UniformToFill" VerticalAlignment="Center" Margin="5" HorizontalAlignment="Center" Width="11" Height="11"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Popup>
                   
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Margin="10"  Command="{Binding PrintPdfCommand}" Padding="0"  Height="16" Width="16" Style="{StaticResource PathGrowButton}" Background="Transparent" Cursor="Hand">
                        <Path Margin="0" Data="{StaticResource pdf}" Fill="#1E3050" Stretch="Uniform" Height="16" Width="16"/>
                    </Button>
                    <Button Margin="5 0 10 0"  Command="{Binding PrintCommand}" Padding="0"  Height="16" Width="16" Style="{StaticResource PathGrowButton}" Background="Transparent" Cursor="Hand">
                        <Path Margin="0" Data="{StaticResource print}" Fill="#1E3050" Stretch="Uniform" Height="16" Width="16"/>
                    </Button>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="2" Margin="20 10">
                <Border   Grid.RowSpan="3" CornerRadius="2" Background="{StaticResource TertiaryBackgroundColor}">
                    <Border.Effect>
                        <DropShadowEffect Direction="-130" BlurRadius="30" ShadowDepth="5" Opacity="0.1"/>
                    </Border.Effect>
                </Border>
                <Path Panel.ZIndex="1" Grid.Row="1" Visibility="{Binding IsLoading,Converter={local:BooleanToVisiblityConverter}, ConverterParameter=True}" 
                    Data="{StaticResource spinner}" Width="64" Height="64" Style="{StaticResource SpinningPath}" Fill="{StaticResource PrimeBlueBrush}" />

                <!--#region Stock Initial -->
                <ScrollViewer   VerticalScrollBarVisibility="Auto"  >
                    <DataGrid  RowStyle="{DynamicResource DataGridRowStyle1}"
                  ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                  CellStyle="{DynamicResource DataGridCellStyle1}"
                  x:Name="usersDataGrid" 
                  Style="{DynamicResource DataGridStyle1}"
                  Margin="0 10" Grid.Row="2" 
                  ItemsSource="{Binding FilteredStocks}" 
                  AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="100" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid x:Name="GridImage">
                                            <Border  CornerRadius="7"  Background="{StaticResource TertiaryBackgroundColor}">
                                                <Border.Effect>
                                                    <DropShadowEffect Direction="-130" BlurRadius="30" ShadowDepth="5" Opacity="0.1"/>
                                                </Border.Effect>
                                            </Border>

                                            <Image Source="{Binding Img, Converter={local:FallbackImageConverter}}"  Style="{StaticResource medImg}" />
                                            <Popup Width="200" Height="140" x:Name="PopupImage" >

                                                <Border    Background="{StaticResource TertiaryBackgroundColor}">
                                                    <Border.Effect>
                                                        <DropShadowEffect Direction="-130" BlurRadius="30" ShadowDepth="5" Opacity="0.1"/>
                                                    </Border.Effect>
                                                    <Image Width="160" Height="120"  Style="{StaticResource medImg}" Source="{Binding Img,Converter={local:FallbackImageConverter}}"/>

                                                </Border>


                                            </Popup>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="PopupImage" Property="IsOpen" Value="True"/>
                                            </Trigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn  Header="Produits Pharmaceutique" Width="280"   IsReadOnly="True"  CanUserResize="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock x:Name="tbPercent" Text="{Binding Nom_Commercial}" FontSize="13"
                                             Foreground="{StaticResource TertiaryTextColor}"
                                             FontFamily="{StaticResource OakSans-Regular}"
                                             ToolTip="{Binding Nom_Commercial}"/>
                                                <TextBlock Text=" "/>
                                                <TextBlock TextWrapping="Wrap" Height="Auto" x:Name="tbPercent3" VerticalAlignment="Bottom" Text="{Binding Forme}" FontSize="11"
                                         Foreground="{StaticResource TertiaryTextColor}"
                                         FontFamily="{StaticResource OakSans-Regular}"
                                           ToolTip="{Binding Forme}"/>

                                            </StackPanel>
                                            <TextBlock TextWrapping="Wrap" Height="Auto" x:Name="tbPercent2" VerticalAlignment="Bottom" Text="{Binding Dosage}" FontSize="11"
                                        Foreground="{StaticResource TertiaryTextColor}"
                                        FontFamily="{StaticResource OakSans-Regular}"
                                             ToolTip="{Binding Dosage}"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="tbPercent" Value="#ffffff" />
                                                <Setter Property="Foreground" TargetName="tbPercent2" Value="#ffffff" />
                                                <Setter Property="Foreground" TargetName="tbPercent3" Value="#ffffff" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="tbPercent" Value="#ffffff" />
                                                <Setter Property="Foreground" TargetName="tbPercent2" Value="#ffffff" />
                                                <Setter Property="Foreground" TargetName="tbPercent3" Value="#ffffff" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn CanUserResize="False" Header="Type" Width="*" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="TypeTxt" TextWrapping="Wrap" Height="Auto" TextAlignment="Center"  Foreground="#113110" ToolTip="{Binding TypeMed}" Text="{Binding TypeMed,UpdateSourceTrigger=PropertyChanged,Converter={local:CurrencyConverter}}" Style="{StaticResource TextH4}" Margin="0"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="TypeTxt" Value="#ffffff" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="TypeTxt" Value="#ffffff" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Entrée" Width="*" IsReadOnly="True" CanUserResize="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Border Padding="6 2" Height="28" Width="Auto" CornerRadius="8" HorizontalAlignment="Left" Background="#349432">
                                                <StackPanel Orientation="Horizontal">
                                                        <TextBlock x:Name="tbPercent5" VerticalAlignment="Center" Text="{Binding StockIn}" FontSize="13"
                                                Foreground="#ffffff" HorizontalAlignment="Center"
                                                FontFamily="{StaticResource OakSans-Regular}" />
                                                </StackPanel>

                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Sortie" Width="*" IsReadOnly="True" CanUserResize="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Border Padding="6 2" Height="28" Width="Auto" CornerRadius="8" HorizontalAlignment="Left" Background="#EF4444">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock x:Name="tbPercent5" VerticalAlignment="Center" Text="{Binding StockOut}" FontSize="13"
                                                              Foreground="#ffffff" HorizontalAlignment="Center"
                                                              FontFamily="{StaticResource OakSans-Regular}" />
                                                </StackPanel>

                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn CanUserResize="False" Header="Stock Initial" Width="*" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Border Padding="6 2" Height="28" Width="Auto" CornerRadius="8" HorizontalAlignment="Center" Background="#4C44A0">

                                                <TextBlock x:Name="TypeTxt" FontSize="13" TextWrapping="Wrap" Height="Auto" TextAlignment="Center"  Foreground="#ffffff" ToolTip="{Binding PreviousQuantity}" Text="{Binding PreviousQuantity,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextH4}" Margin="0"/>
                                            </Border>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="TypeTxt" Value="#ffffff" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="TypeTxt" Value="#ffffff" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn IsReadOnly="True" Header="Unité" Width="*"  CanUserSort="False" CanUserReorder="False" CanUserResize="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="UntTxt" TextWrapping="Wrap" Height="Auto" VerticalAlignment="Center" FontSize="11" Text="{Binding Unite}" Style="{StaticResource TextH2}" Margin="0"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="UntTxt" Value="#ffffff" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="UntTxt" Value="#ffffff" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="à la Date" Width="*" IsReadOnly="True" CanUserResize="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Foreground="Black"  x:Name="tbPercent5"  Text="{Binding Date,StringFormat=dd/MM/yyyy}" TextAlignment="Center"   Margin="0"
                                                       Style="{StaticResource TextH4}"
                                                         ToolTip="{Binding Date}"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="tbPercent5" Value="#ffffff" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="tbPercent5" Value="#ffffff" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Fournisseur" IsReadOnly="True" Width="*" CanUserSort="False" CanUserReorder="False" CanUserResize="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="fornisstxt" TextWrapping="Wrap" Height="Auto" VerticalAlignment="Center" FontSize="12" Text="{Binding Supplie}" Style="{StaticResource TextH2}" Margin="0"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="fornisstxt" Value="#ffffff" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                                                <Setter Property="Foreground" TargetName="fornisstxt" Value="#ffffff" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </ScrollViewer>
                <!--#endregion-->

            </Grid>
            <local:PaginationControl DataContext="{Binding PaginationView}" HorizontalAlignment="Right" Grid.Row="3"/>

        </Grid>
    </Grid>
</local:BasePage>
